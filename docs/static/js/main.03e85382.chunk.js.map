{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCatory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,EAjCE,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAGf,EAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAkBC,EAAlB,KAaA,OACI,sBAAMC,SARU,SAACC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAIlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAOF,GAFP,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATvB,kBAaXM,GAbW,4CAAF,sDCaJO,EAZG,SAAC,GAAe,IAAdH,EAAa,EAAbA,MAAMV,EAAO,EAAPA,IAGtB,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCoBDO,EAxBD,SAAC,GAAc,IAAbnB,EAAY,EAAZA,SAGb,ECNuB,SAACA,GAExB,MAAuBd,mBAAS,CAC5BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAaC,EAAb,KAiBA,OAZAC,qBAAU,WAENxB,EAAQC,GACCwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAKG,EACLU,SAAQ,SAI1B,CAACpB,IAEIqB,EDbqBI,CAAazB,GAA7Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAIlB,OACG,qCACI,qBAAIJ,UAAU,oCAAd,UAAmDhB,EAAnD,OACCoB,GAAS,mBAAGJ,UAAU,mCAAb,wBACV,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aESlBe,EAzBI,WAChB,MAAiCxC,mBAAS,CAAC,cAA3C,mBAAOyC,EAAP,KAAkB1C,EAAlB,KAEC,OACI,qCACI,+CACA,cAAC,EAAD,CAAWA,cAAeA,IAC1B,uBAGA,6BAEQ0C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCXjC4B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.03e85382.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from  'prop-types';\r\nconst AddCatory =({setCategories})=>{\r\n\r\n    \r\n    const [inputValue,setInputValue]=useState('');\r\n    \r\n    const handleImputValue= (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit= (e) =>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length>2){\r\n            setCategories(cats =>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n          \r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleImputValue}\r\n            />\r\n\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCatory.propTypes ={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\nexport default AddCatory;","\r\n\r\nexport const getGifs= async(category)=>{\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Kag5UXyLEDIaaCW4lMTZQJEqQ5vVnd4M`;\r\n    const resp= await fetch (url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs=data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from   'react';\r\n\r\n\r\nconst GifGridItem =({title,url})=>{\r\n\r\n    \r\n     return (\r\n         <div className=\"card animate__animated animate__fadein\">\r\n             <img src={url} alt={title}/>\r\n             <p>{title}</p>\r\n\r\n         </div>\r\n     )\r\n }\r\n\r\n export default GifGridItem;","import React from   'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nconst GifGrid =({category})=>{\r\n\r\n    \r\n    const {data:images,loading}=useFetchGifs(category);\r\n    \r\n\r\n     \r\n     return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadein\">{category} </h3>\r\n            {loading&&<p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img=>(\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n     )\r\n }\r\n\r\n export default GifGrid;","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs =(category)=>{\r\n\r\n    const [state,setState]=useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        \r\n        getGifs(category)\r\n                .then(img =>{\r\n                    setState({\r\n                        data:img,\r\n                        loading:false\r\n                    })\r\n                })\r\n            \r\n    },[category])\r\n\r\n    return state;\r\n}","import React,{useState} from 'react';\r\nimport AddCatory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp=()=>{\r\n   const [categories,setCategories]=useState(['one punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp </h2>\r\n            <AddCatory setCategories={setCategories} />\r\n            <hr />\r\n\r\n          \r\n            <ol>\r\n                {\r\n                    categories.map(category=>\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n\r\n                        />    \r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}